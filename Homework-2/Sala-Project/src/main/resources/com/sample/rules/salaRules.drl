//created on: 15 mag 2022
package com.sample.rules

import com.sample.Sala;
import java.util.ArrayList;

import com.sample.Player;

import com.sample.Machine;
import java.util.Random;


//declare any global variables here


/**
This test is used to give an allarm if there aren't machine in the Sala.
It use the not function
*/
rule "Not Machines!"
	when
	    not Sala ($machines: machines, !$machines.isEmpty())
		//not $machines.size()!=0	
	then
		System.out.println("Sala doesn't have machine!!!");
end

/**
* Check if the Sala is full of positin
*/
rule "Sala Full"
    //include attributes such as "salience" here...
    salience 9
    enabled true
    when
        //conditions
        $s : Sala ($s.getMachines.size()==$s.getPlayers.size() , $s.getMachines.size()>0)
	//	$s.getMachines().size()==$s.getPlayers().size()
    then
        //actions
        System.out.println("Sala Slot full. Nmuber of machines and players "+$s.getMachines().size());
end

rule "step"
	salience 10
	when
		Sala( $players : players, $machines: machines)
	then
	
		for(int i=0; i<$players.size();i++) {
				int x= (int)Math.floor(Math.random()*(2000-0+1)+0);
				if(x<800) {
					modify(
						$player.get(i).decreaseCash();
						$machines.get(i).addAmount();
					)
				}
				else if(x>=900 && x<990) {
					$players.get(i).increaseCash(50);
					$machines.get(i).decreaseCash(50);
				}else if(x>=990) {
					try {
						$players.get(i).increaseCash($machines.get(i).jackpot());
					}
					catch(Exception e) {
					}
				}
				$players.get(i).addStep();
			}
			this.counter++;
end